---
import setWith from 'lodash.setwith';

import type { AWPost } from '~/types/content';
import Layout from '~/layouts/PageLayout.astro';
import SinglePost from '~/components/blog/SinglePost.astro';
import ToBlogLink from '~/components/blog/ToBlogLink.astro';
import RelatedPosts from '~/components/blog/RelatedPosts.astro';
import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getPosts } from '~/utils/blog';

export async function getStaticPaths() {
  const posts = await getPosts();

  const allSlugMapping = {};
  posts.forEach((item) => {
    setWith(allSlugMapping, [item.id, item.lang], item.slug, Object);
  });

  const res = posts.map((item) => {
    return {
      params: { lang: item.lang, slug: item.slug },
      props: {
        post: item,
        slugMapping: allSlugMapping[item.id || ''],
      },
    };
  });

  return res;
}
type Props = {
  post: AWPost;
  slugMapping: object;
};

const { post, slugMapping } = Astro.props;

const { lang } = Astro.params;

const url = getCanonical(getPermalink(post.slug, 'blog', lang));

const metadata = {
  title: post.title || '',
};
---

<Layout metadata={metadata} slugMapping={slugMapping}>
  <!-- <article set:html={content} /> -->
  <SinglePost post={{ ...post }} url={url} />
  <ToBlogLink />
  <RelatedPosts relatedPosts={post.relatedPosts || []} />
</Layout>
